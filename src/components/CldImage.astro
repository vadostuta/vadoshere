---
// const maxImagesNumber = images.length;

// const getIndexArrayOfImages = () => {
//     let index = maxImagesNumber;
//     let gav = [];

//     while (index !== 0) {
//         gav.push(index);
//         index--;
//     }

//     return gav;
// };

// const array = getIndexArrayOfImages();
// localStorage.setItem("indexArrayOfImages", JSON.stringify(array));

// const getRandomImageNumber = (myArray) =>
//   Math.floor(Math.random() * myArray.length + 1);

// const randomNumber = getRandomImageNumber(array)

// const arrayIndex = array.findIndex(el => el === randomNumber)
// console.log(array)
// const imageIndex = array.splice(arrayIndex, 1)
// console.log(imageIndex)

import { Cloudinary } from "@cloudinary/url-gen";
import { Image } from "astro:assets";

const cld = new Cloudinary({
    cloud: {
        cloudName: import.meta.env.PUBLIC_CLOUDINARY_CLOUD_NAME,
    },
    url: {
        secure: true, // force https, set to false to force http
    },
});

const { src, loading = "lazy", ...props } = Astro.props;

let cldSrc = cld.image(src).format("auto");

if (src?.startsWith("https://")) {
    cldSrc.setDeliveryType("fetch");
}

interface Props {
    src: string;
    alt: string;
    class?: string;
    loading?: "eager" | "lazy";
}
---

<Image src={cldSrc.toURL()} loading="eager" inferSize {...props} />

<style>
    img {
        max-width: 100%;
        height: auto;
        aspect-ratio: auto 640 / 360;
        display: block;
    }
</style>
